<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>523</ID>
      <Description>"Click Me To Active All"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>88</ID>
          <Description>"Confirm Button Fix"</Description>
          <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>81</ID>
              <Description>"Confirm Button Fix 1"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)
label(originalcode)
label(confirm)
label(confirm_set_1)
label(confirm_set_0)

newmem:
cmp ecx,0A0A
je confirm

originalcode:
mov edx,edi
mov ecx,ebx
call 0047D940
jmp returnhere

// ebx = player
// edi = packet
// player+15C4 = Trading With
// player+15E4 = Trade OK Button State
// player+6310 = Trade Confirm Button State
confirm:
cmp dword ptr [ebx+15C4],0
je returnhere

cmp byte ptr [edi+2],1
je confirm_set_1
cmp byte ptr [edi+2],0
je confirm_set_0
jmp returnhere

confirm_set_1:
sub esp,4

mov ecx,ebx

mov dword ptr [ecx+6310],1

mov word ptr [esp],0A0A
mov byte ptr [esp+2],1
mov byte ptr [esp+3],1

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Confirm1 On

mov ecx, dword ptr [ebx+15C4]

mov word ptr [esp],0A0A
mov byte ptr [esp+2],2
mov byte ptr [esp+3],1

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm1 On

add esp,4

jmp returnhere

confirm_set_0:
sub esp,4

mov ecx,ebx
mov dword ptr [ecx+6310],0

mov word ptr [esp],0A0A
mov byte ptr [esp+2],1
mov byte ptr [esp+3],0

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Confirm1 Off

mov ecx,ebx
mov byte ptr [esp+2],2
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Confirm2 Off

mov ecx,ebx

mov byte ptr [ecx+15E4],0

mov word ptr [esp],0A05
mov byte ptr [esp+2],3
mov byte ptr [esp+3],1

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Cancel OK

mov ecx, dword ptr [ebx+15C4]

mov dword ptr [ecx+6310],0

mov word ptr [esp],0A0A
mov byte ptr [esp+2],1
mov byte ptr [esp+3],0

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm1 Off

mov ecx, dword ptr [ebx+15C4]
mov byte ptr [esp+2],2
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm2 Off

mov ecx, dword ptr [ebx+15C4]

mov byte ptr [ecx+15E4],0

mov word ptr [esp],0A05
mov byte ptr [esp+2],3
mov byte ptr [esp+3],1
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Cancel OK

add esp,4

jmp returnhere

00474E07:
jmp newmem
nop
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)

00474E07:
mov edx,edi
mov ecx,ebx
call 0047D940
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>200</ID>
              <Description>"Confirm Button Fix 2"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(returnhere)
label(originalcode)

newmem:
cmp [ecx+6310],al
jne 0047E263
cmp [esi+6310],al
jne 0047E263

originalcode:
cmp [ecx+000015E4],al
jne 0047E263
jmp returnhere

0047E253:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)

0047E253:
cmp [ecx+000015E4],al
jne 0047E263
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>82</ID>
              <Description>"Confirm Button Fix 3"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)
label(originalcode)

newmem:
mov dword ptr [ecx+6310],0
mov dword ptr [esi+6310],0

push ecx
push edx

sub esp,4

mov word ptr [esp],0A0A
mov byte ptr [esp+2],1
mov byte ptr [esp+3],0

mov edx,esp

push ecx

push 4
push edx
call 004ED0E0
// Send P1 Confirm1 Off

pop ecx

mov byte ptr [esp+2],2

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Confirm2 Off

mov ecx,esi
mov byte ptr [esp+2],1
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm1 Off

mov ecx,esi
mov byte ptr [esp+2],2
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm2 Off

add esp,4

pop edx
pop ecx

originalcode:
push 04
lea edx,[esp+04]

jmp returnhere

0047E26F:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)

0047E26F:
push 04
lea edx,[esp+04]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>85</ID>
              <Description>"Confirm Button Fix 4"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(remove_confirm_ok)

// player = ebx
// usable: eax, edx, ecx
newmem:
cmp dword ptr [ebx+6310],0
jne remove_confirm_ok
mov ecx, dword ptr [ebx+15C4]
cmp dword ptr [ecx+6310],0
je originalcode

remove_confirm_ok:
sub esp,4

mov ecx,ebx
mov dword ptr [ecx+6310],0

mov word ptr [esp],0A0A
mov byte ptr [esp+2],1
mov byte ptr [esp+3],0

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Confirm1 Off

mov ecx,ebx
mov byte ptr [esp+2],2
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Confirm2 Off

mov ecx,ebx

mov byte ptr [ecx+15E4],0

mov word ptr [esp],0A05
mov byte ptr [esp+2],3
mov byte ptr [esp+3],1

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Cancel OK

mov ecx, dword ptr [ebx+15C4]

mov dword ptr [ecx+6310],0

mov word ptr [esp],0A0A
mov byte ptr [esp+2],1
mov byte ptr [esp+3],0

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm1 Off

mov ecx, dword ptr [ebx+15C4]
mov byte ptr [esp+2],2
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm2 Off

mov ecx, dword ptr [ebx+15C4]

mov byte ptr [ecx+15E4],0

mov word ptr [esp],0A05
mov byte ptr [esp+2],3
mov byte ptr [esp+3],1
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Cancel OK

add esp,4

originalcode:
mov ecx,ebx
call 0047E250
jmp returnhere

0047DE08:
jmp newmem
returnhere:

[DISABLE]
dealloc(newmem)

0047DE08:
call 0047E250
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>86</ID>
              <Description>"Confirm Button Fix 5"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(remove_confirm_ok)

// player = ebx
// usable: eax, edx, ecx
newmem:
cmp dword ptr [ebx+6310],0
jne remove_confirm_ok
mov ecx, dword ptr [ebx+15C4]
cmp dword ptr [ecx+6310],0
je originalcode

remove_confirm_ok:
sub esp,4

mov ecx,ebx
mov dword ptr [ecx+6310],0

mov word ptr [esp],0A0A
mov byte ptr [esp+2],1
mov byte ptr [esp+3],0

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Confirm1 Off

mov ecx,ebx
mov byte ptr [esp+2],2
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Confirm2 Off

mov ecx,ebx

mov byte ptr [ecx+15E4],0

mov word ptr [esp],0A05
mov byte ptr [esp+2],3
mov byte ptr [esp+3],1

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P1 Cancel OK

mov ecx, dword ptr [ebx+15C4]

mov dword ptr [ecx+6310],0

mov word ptr [esp],0A0A
mov byte ptr [esp+2],1
mov byte ptr [esp+3],0

mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm1 Off

mov ecx, dword ptr [ebx+15C4]
mov byte ptr [esp+2],2
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Confirm2 Off

mov ecx, dword ptr [ebx+15C4]

mov byte ptr [ecx+15E4],0

mov word ptr [esp],0A05
mov byte ptr [esp+2],3
mov byte ptr [esp+3],1
mov edx,esp

push 4
push edx
call 004ED0E0
// Send P2 Cancel OK

add esp,4

originalcode:
mov ecx,ebx
call 0047E250
jmp returnhere

0047DFC0:
jmp newmem
returnhere:

[DISABLE]
dealloc(newmem)

0047DFC0:
call 0047E250
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Cross Faction Trading"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

0047D9AA:
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

[DISABLE]

0047D9AA:
mov cl, byte ptr [eax+12D]
cmp cl, byte ptr [ebx+12D]
jne 0047E0DA
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>397</ID>
          <Description>"Cross Faction Whisper"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
0047f629:
db 90 90 90 90 90 90

0047ff69:
db 90 90 90 90 90 90


[DISABLE]
0047f629:
db 0F 85 DF 00 00 00

0047ff69:
db 0F 85 DF 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>260</ID>
          <Description>"Shared PvP Kills"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(M1)
label(M2)
label(M3)
label(M4)
label(M5)
label(M6)
label(M7)
label(M8)
label(M9)

newmem:
pushad
mov edi,esi
mov edx,[esi+000000E0]
xor ecx,ecx
mov cl,[esi+0000012D]
cmp ecx,01
je setzero
mov ecx,01
jmp gocall
setzero:
mov ecx,00
gocall:
push ecx
push edx
call ShareKill
popad
originalcode:

exit:
jmp 00465ACF

ShareKill:
sub esp,10 { 16 }
push ebx
push ebp
mov ebp,[esp+1C]
push esi
call dword ptr [ps_game.exe+1540D0] { -&gt;kernel32.GetTickCount }
lea esi,[ebp+0000018C]
mov ebx,eax
push esi
add ebx,000003E8 { 1000 }
mov [esp+1C],esi
call dword ptr [ps_game.exe+1540DC] { -&gt;ntdll.RtlEnterCriticalSection }
mov ecx,[ebp+00000184]
mov eax,[ecx+04]
mov [ebp+00000188],eax
cmp eax,ecx
je M1
test eax,eax
je M1
M8:
mov eax,[eax+08]
test eax,eax
je M2
lea esi,[eax-000000D0]
jmp M3
M2:
xor esi,esi
M3:
// cmp byte ptr [esi+00005808],0A { if ( *(_BYTE *)(v8 + 22376) &gt; 0xAu )}
//ja M4
//mov eax,[ebp+00000188] {  v6 = (CObjectLink *)CZone-&gt;m_listUser.cursor-&gt;next;}
//mov eax,[eax+04]
//jmp M6

M4:
cmp edi,esi
jne M5
mov ecx,[ebp+00000188]
mov eax,[ecx+04]
jmp M6
M5:
mov dl,[esp+24]
cmp byte ptr [esi+160],(int)86
je killhere
cmp [esi+0000012D],dl { if ( *(_BYTE *)(v8 + 301) == byCountry )}
jne M9

killhere:
// NEW CODE HERE //
fld dword ptr [edi+000000D0]
push ecx
fsub dword ptr [esi+000000D0]
fstp dword ptr [esp+14]
fld dword ptr [edi+000000D8]
fsub dword ptr [esi+000000D8]
fstp dword ptr [esp+24]
fld dword ptr [esp+24]
fld dword ptr [esp+14]
fmul st(0),st(0)
fld st(1)
fmulp st(2),st(0)
faddp
fstp dword ptr [esp+24]
fld dword ptr [esp+24]
fstp dword ptr [esp]
call ps_game.exe+1B8A0
fcomp dword ptr [RangeFloat] { [700.00] }
add esp,04 { 00000004 }
fnstsw ax
sahf
//test ah,41 { 65 }
jae M9 { if ( v11 &gt; 10.0 )}
//Need check party
cmp [esi+000017F4],00
je M9
mov ecx,esi
push edi
call ps_game.exe+67CE0
//               //
M9:
mov edx,[ebp+00000188]
mov eax,[edx+04]
M6:
cmp eax,[ebp+00000184] { while ( v6 != CZone-&gt;m_listUser.head &amp;&amp; v6 );}
mov [ebp+00000188],eax
je M7
test eax,eax
jne M8
M7:
mov esi,[esp+18] { v4 = &amp;this-&gt;m_listUser.m_csList.m_cs;}
M1:
push esi
call dword ptr [ps_game.exe+1540D4] { -&gt;ntdll.RtlLeaveCriticalSection }
pop esi
pop ebp
pop ebx
add esp,10 { 16 }
ret 0008 { 00000008 }

RangeFloat:
dd 42C80000

"ps_game.exe"+65AAD:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+65AAD:
call ps_game.exe+67EE0
//Alt: db E8 2E 24 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Cross Faction Area Chat (AH)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,128)

newmem:
cmp byte ptr [ecx+5808],2
jbe 004270ED

cmp byte ptr [ecx+160],#42
je 004270ED

mov dl, byte ptr [esp+18]
cmp dl, byte ptr [ecx+12D]
jmp returnhere

004270E1:
jmp newmem
nop
nop
nop
nop
nop
returnhere:

[DISABLE]

004270E1:
mov dl, byte ptr [esp+18]
cmp dl, byte ptr [ecx+12D]

dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>231</ID>
          <Description>"Cross Faction Inspect"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

00477D3D:
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

[DISABLE]

00477D3D:
mov cl, byte ptr [edi+12D]
cmp cl, byte ptr [eax+12D]
jne 00478048
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>461</ID>
          <Description>"Skill Cut Fix."</Description>
          <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>465</ID>
              <Description>"Block 1"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//delays using arena recall runes after using skills
[ENABLE]
alloc(newmem,128)
label(return)
label(exit)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
cmp dword ptr [eax+000001A4],00

exit:
jmp return

00473FFD:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473FFD:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>464</ID>
              <Description>"block 2"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//delays using bootleggery runes after using skills
[ENABLE]
alloc(newmem,128)
label(return)
label(exit)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
cmp dword ptr [eax+000001A4],00

exit:
jmp return

00473ED7:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473ED7:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>463</ID>
              <Description>"block 3"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//delays using capital recall runes after using skills
[ENABLE]
alloc(newmem,128)
label(return)
label(exit)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
cmp dword ptr [eax+000001A4],00

exit:
jmp return

00473DB0:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473DB0:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>462</ID>
              <Description>"block 4"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//delays using guild house rune after using skills
[ENABLE]
alloc(newmem,128)
label(return)
label(exit)

newmem:
cmp dword ptr [ebp+00001270],02
je 004742B6
cmp dword ptr [eax+000001A4],06

exit:
jmp return

00474196:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00474196:
cmp dword ptr [eax+000001A4],06
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>519</ID>
          <Description>"Prevent SQL Injection"</Description>
          <Options moHideChildren="1" moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1</ID>
              <Description>""NoticeWarning" (Credit: Cups)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>// Disables the call to the database for /warning (fixes SQL injection via warning)
[ENABLE]
ps_game.exe+836C6:
jmp ps_game.exe+841B8

[DISABLE]
ps_game.exe+836C6:
mov ebx,[esp+18]
push edi
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>520</ID>
              <Description>""NoticeAdmin""</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,32)

newmem:
mov ebx,00571E2F
jmp 004833C8

00482E95:
jmp newmem
nop

[DISABLE]
dealloc(newmem)
00482E95:
push ebx
mov ebx,00571E2F
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>521</ID>
              <Description>""NoticeNormal""</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,32)

newmem:
mov ebx,00571E2F
jmp 004833C8

00482F96:
jmp newmem
nop

[DISABLE]
dealloc(newmem)
00482F96:
push ebx
mov ebx,00571E2F
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>522</ID>
              <Description>""NoticeTo""</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,32)

newmem:
mov ebx,[esp+20]
jmp 004833C8

004830AD:
jmp newmem

[DISABLE]
dealloc(newmem)
004830AD:
push ebx
mov ebx,[esp+20]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>12</ID>
              <Description>""NoticeCountry""</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,32)

newmem:
mov ebx,00571E2F
jmp 004833C8

004832AB:
jmp newmem
nop

[DISABLE]
dealloc(newmem)
004832AB:
push edi
mov ebx,00571E2F
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>""NoticeMap""</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,32)

newmem:
mov ebx,00571E2F
jmp 004833C8

004831A2:
jmp newmem
nop

[DISABLE]
dealloc(newmem)
004831A2:
push edi
mov ebx,00571E2F
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>""NoticeAll""</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,32)

newmem:
mov ebx,00571E2F
jmp 004833C8

004833AA:
jmp newmem
nop

[DISABLE]
dealloc(newmem)
004833AA:
push edi
mov ebx,00571E2F
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>237</ID>
          <Description>"Require only 3 people to be in the party"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp eax,02

exit:
jmp returnhere

"ps_game.exe"+850A8:
jmp newmem
nop
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+850A8:
cmp eax,07
jg ps_game.exe+8520C
//Alt: db 83 F8 03 0F 8F 5B 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>239</ID>
          <Description>"Require only 3 people to accept the guild creation request"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [esi+24],02
jl ps_game.exe+85456

exit:
jmp returnhere

"ps_game.exe"+8542C:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+8542C:
cmp dword ptr [esi+24],07
jl ps_game.exe+85456
//Alt: db 83 7E 24 03 7C 24
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>482</ID>
          <Description>"Boss Spawn Notice"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,1024)

// ebx = mob pointer
newmem:
call func_send_notice

originalcode:
lea edx, dword ptr [edi+98]
jmp returnhere

func_send_notice:
pushad

add ebx,2

sub esp,#100

mov edi,esp

push #100
push 0
push edi
call msvcrt.memset
add esp,C

mov word ptr [edi],F90B
mov byte ptr [edi+2],FF

push ebx
push edi
call msvcrt.strcat
add esp,8

push notice_text
push edi
call msvcrt.strcat
add esp,8

push edi
call msvcrt.strlen
add esp,4

mov byte ptr [edi+2],al

mov esi, dword ptr [00587960]
movzx eax, byte ptr [edi+2]
add eax,3
mov ecx,edi
call 00419120

add esp,#100

func_send_notice_exit:
popad
ret

notice_text:
db ' just spawned and awaits for the champion that will face it!'
db 0

00422F0D:
jmp newmem
nop
returnhere:

[DISABLE]

00422F0D:
lea edx, dword ptr [edi+98]

dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>485</ID>
          <Description>"Boss Death Notice"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,1024)

// ebx = mob pointer
// eax = player pointer
newmem:
call func_send_notice

originalcode:
lea ecx, dword ptr [ebx+DD4]
jmp returnhere

func_send_notice:
pushad

mov esi,eax
add esi,184

mov ebx, dword ptr [ebx+D4]
add ebx,2

sub esp,#100

mov edi,esp

push #100
push 0
push edi
call msvcrt.memset
add esp,C

mov word ptr [edi],F90B
mov byte ptr [edi+2],FF

push ebx
push edi
call msvcrt.strcat
add esp,8

push notice_text
push edi
call msvcrt.strcat
add esp,8

push esi
push edi
call msvcrt.strcat
add esp,8

push edi
call msvcrt.strlen
add esp,4

mov byte ptr [edi+2],al

mov esi, dword ptr [00587960]
movzx eax, byte ptr [edi+2]
add eax,3
mov ecx,edi
call 00419120

add esp,#100

func_send_notice_exit:
popad
ret

notice_text:
db ' was just killed by '
db 0

004A2083:
jmp newmem
nop
returnhere:

[DISABLE]

004A2083:
lea ecx, dword ptr [ebx+DD4]

dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Instant Mounts"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[eax+30]
cmp byte ptr[ecx+25],(int)17//TypeID
je 00477155
cmp byte ptr[ecx+25],(int)19//TypeID
je 00477155
cmp byte ptr[ecx+25],(int)18//TypeID
je 00477155
cmp byte ptr[ecx+25],(int)20//TypeID
je 00477155
cmp byte ptr[ecx+25],(int)21//TypeID
je 00477155
cmp byte ptr[ecx+25],(int)23//TypeID
je 00477155
cmp byte ptr[ecx+25],(int)22//TypeID
je 00477155
cmp byte ptr[ecx+25],(int)24//TypeID
je 00477155
originalcode:
cmp byte ptr [ecx+30],03

exit:
jmp returnhere

"ps_game.exe"+7713E:
jmp newmem
nop
nop
returnhere:



[DISABLE]
"ps_game.exe"+7713E:
mov ecx,[eax+30]
cmp byte ptr [ecx+30],03
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>492</ID>
          <Description>"cross faction party &amp; FFA(86)"</Description>
          <Options moRecursiveSetValue="1" moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>496</ID>
              <Description>"everyone red"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp byte ptr [ebp+160],(int)86 //MapID
jne originalcode2
push eax
mov ecx, [ebx+000017F4]
cmp ecx, 0
je code
mov eax, [ebp+000017F4]
cmp eax, 0
je code
cmp eax, ecx
jne code
movzx ecx, byte ptr [ebp+0000012D] //who
jmp originalcode
code:
movzx ecx, byte ptr [ebx+0000012D] //who
movzx eax, byte ptr [ebp+0000012D] //whom
cmp eax, ecx
jne originalcode
cmp eax, 1
jne ex
mov cl, 0
jmp originalcode
ex:
mov cl, 1
originalcode:
pop eax
mov [esp+3C],cl
movzx ecx,byte ptr [ebx+00000132]

exit:
jmp returnhere
originalcode2:
mov [esp+3C],cl
movzx ecx,byte ptr [ebx+00000132]
jmp exit

"ps_game.exe"+26B17:
jmp newmem
nop
nop
nop
nop
nop
nop
returnhere:



[DISABLE]
dealloc(newmem)
"ps_game.exe"+26B17:
mov [esp+3C],cl
movzx ecx,byte ptr [ebx+00000132]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>497</ID>
              <Description>"random respawm"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
alloc(count,4)
label(returnhere)
label(exit)

newmem:
cmp byte ptr[edi+160],(int)86 //MapID
jne exit
cmp [count],0
je one
cmp [count],1
je two
cmp [count],2
je three
cmp [count],3
je four
cmp [count],4
je five
cmp [count],5
je six
cmp [count],6
je seven
cmp [count],7
je eight
jmp exit

exit:
fld dword ptr [ebp+08]
mov ecx,[edi+000000E0]
jmp returnhere

one:
mov [ebp+00],(float)462.870 //X
mov [ebp+04],(float)26.940//Y
mov [ebp+08],(float)307.897//Z
add [count],1
jmp exit

two:
mov [ebp+00],(float)450.858 //X
mov [ebp+04],(float)26.940 //Y
mov [ebp+08],(float)273.396//Z
add [count],1
jmp exit

three:
mov [ebp+00],(float)418.653 //X
mov [ebp+04],(float)26.940 //Y
mov [ebp+08],(float)266.277//Z
add [count],1
jmp exit

four:
mov [ebp+00],(float)385.651 //X
mov [ebp+04],(float)26.940 //Y
mov [ebp+08],(float)263.502//Z
add [count],1
jmp exit

five:
mov [ebp+00],(float)355.170 //X
mov [ebp+04],(float)26.940 //Y
mov [ebp+08],(float)270.684//Z
add [count],1
jmp exit

six:
mov [ebp+00],(float)347.901 //X
mov [ebp+04],(float)26.940 //Y
mov [ebp+08],(float)305.415//Z
add [count],1
jmp exit

seven:
mov [ebp+00],(float)350.825 //X
mov [ebp+04],(float)26.940 //Y
mov [ebp+08],(float)333.648//Z
add [count],1
jmp exit

eight:
mov [ebp+00],(float)385.208 //X
mov [ebp+04],(float)26.940 //Y
mov [ebp+08],(float)337.772//Z
mov [count],0
jmp exit

"ps_game.exe"+66E45:
jmp newmem
nop
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+66E45:
fld dword ptr [ebp+08]
mov ecx,[edi+000000E0]
//Alt: db D9 45 08 8B 8F E0 00 00 00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>517</ID>
              <Description>"heal/dispel"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)


newmem: //this is allocated memory, you have read,write,execute access
mov al,[esi+0000012D]
cmp word ptr [esi+160],(int)86
JE 00457F41

originalcode:

jmp exit


exit:
jmp returnhere

"ps_game.exe"+57F33:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+57F33:
mov al,[esi+0000012D]
//Alt: db 8A 86 2D 01 00 00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>518</ID>
              <Description>"buff"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)


newmem: //this is allocated memory, you have read,write,execute access
mov dl,[esi+0000012D]
cmp word ptr [edi+160],(int)86
JE ps_game.exe+60a53

originalcode:

jmp exit


exit:
jmp returnhere

"ps_game.exe"+60A45:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+60A45:
mov dl,[esi+0000012D]
//Alt: db 8A 96 2D 01 00 00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"PVP Abelity same faction"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(pvp)

newmem: //this is allocated memory, you have read,write,execute access
cmp word ptr [edx+160],(int)86
JE pvp

originalcode:
mov dl,[edx+0000012D]
jmp exit

pvp:
mov dl,[edx+17F4]
cmp dl,[eax+17F4]
je "ps_game.exe"+57E39
jne "ps_game.exe"+57E35

exit:
jmp returnhere

"ps_game.exe"+57E27:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+57E27:
mov dl,[edx+0000012D]
//Alt: db 8A 92 2D 01 00 00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>498</ID>
              <Description>"attack same faction"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp byte ptr [eax+160],(int)86//MapID
je 00457E35
originalcode:
mov dl,[edx+0000012D]

exit:
jmp returnhere

"ps_game.exe"+57E27:
jmp newmem
nop
returnhere:



[DISABLE]
dealloc(newmem)
"ps_game.exe"+57E27:
mov dl,[edx+0000012D]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>524</ID>
              <Description>"Auto Loot"</Description>
              <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>125</ID>
                  <Description>"Gold To Inventory"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)

label(solo)
label(solo_bonus)
label(solo_bonus_ok)
label(solo_bonus_wtc)
label(solo_bonus_rpc)

newmem:
mov eax, dword ptr [esp+44] // raid pointer
test eax,eax
je solo
jmp returnhere

solo:
mov edx, dword ptr [esp+40] // player pointer
test edx,edx
je 004BAE0D

cmp dword ptr [edx+594C],2
je solo_bonus_wtc
cmp dword ptr [edx+594C],3
je solo_bonus_rpc

solo_bonus_ok:
mov ecx, dword ptr [esp+18]
call 0046BBA0
jmp 004BAEB8

solo_bonus:
sub esp,4
fild dword ptr [esp+1C]
fld dword ptr [esp]
fmul st(1),st(0)
fstp dword ptr [esp]
fistp dword ptr [esp+1C]
add esp,4
jmp solo_bonus_ok

solo_bonus_wtc:
mov dword ptr [esp-4],(float)1.200 // White Tiger Charm = +20%
jmp solo_bonus

solo_bonus_rpc:
mov dword ptr [esp-4],(float)1.500 // Red Phoenix Charm = +50%
jmp solo_bonus

004BAD4C:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)

004BAD4C:
mov eax, dword ptr [esp+44]
test eax,eax
je 004BAE0D
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>127</ID>
                  <Description>"Drop To Inventory"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(returnhere)
label(solo)

newmem:
test ebp,ebp
je solo
jmp returnhere

solo:
mov ecx, dword ptr [esp+18]
test ecx,ecx
je 004BB438
push ebx
call 0046AE60
jmp 004BB47A

004BB1D5:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)

004BB1D5:
test ebp,ebp
je 004BB438
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>227</ID>
          <Description>"Admin Read Both Trade Chats"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,32)

newmem:
cmp byte ptr [ecx+5808],2
jbe returnhere

cmp dl, byte ptr [ecx+12D]
jne 004279CE

jmp returnhere

00427938:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
returnhere:

[DISABLE]

00427938:
cmp dl, byte ptr [ecx+12D]
jne 004279CE

dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>506</ID>
          <Description>"Admin join both side raid "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(raid_faction_override, 128)
define(allow_join, ps_game.exe+757D8)
label(return)

raid_faction_override:

cmp [ebp+5808],(int)10
jl allow_join

cmp dl,[edi+0000012D]
jmp return

ps_game.exe+757C0:
jmp raid_faction_override
db 90
return:

[DISABLE]
dealloc(raid_autojoin_override)

ps_game.exe+757C0:
cmp dl,[edi+0000012D]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>466</ID>
          <Description>"Skill,Jump Cut Fix - [Dev]Factory"</Description>
          <Options moAlwaysHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>41</ID>
              <Description>"Skill Casting (Jump Cut Fix)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(newmem,512)

newmem:
push eax
mov eax, dword ptr [esp+28]
mov dword ptr [esi+6410],eax
pop eax

originalcode:
mov ebp,[esp+24]
push esi
jmp returnhere

0045B1C7:
jmp newmem
returnhere:

[DISABLE]

0045B1C7:
mov ebp, dword ptr [esp+24]
push esi

dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>528</ID>
                  <Description>"Block 1"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//delays using arena recall runes after using skills
[ENABLE]
alloc(newmem,128)
label(return)
label(exit)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
cmp dword ptr [eax+000001A4],00

exit:
jmp return

00473FFD:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473FFD:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>529</ID>
                  <Description>"block 2"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//delays using bootleggery runes after using skills
[ENABLE]
alloc(newmem,128)
label(return)
label(exit)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
cmp dword ptr [eax+000001A4],00

exit:
jmp return

00473ED7:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473ED7:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>530</ID>
                  <Description>"block 3"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//delays using capital recall runes after using skills
[ENABLE]
alloc(newmem,128)
label(return)
label(exit)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
cmp dword ptr [eax+000001A4],00

exit:
jmp return

00473DB0:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473DB0:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>531</ID>
                  <Description>"block 4"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//delays using guild house rune after using skills
[ENABLE]
alloc(newmem,128)
label(return)
label(exit)

newmem:
cmp dword ptr [ebp+00001270],02
je 004742B6
cmp dword ptr [eax+000001A4],06

exit:
jmp return

00474196:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00474196:
cmp dword ptr [eax+000001A4],06
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Disable Bless Increation"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
00419979:
add esp,0x8
nop
nop
nop

00419Adc:
add esp,0x8
nop
nop
nop

00419C3b:
add esp,0x8
nop
nop
nop


[DISABLE]
00419979:
call dword ptr [00554120]

00419Adc:
call dword ptr [00554120]

00419C3b:
call dword ptr [00554120]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>477</ID>
      <Description>"DEX Override (Melee)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(pop_originalcode)
label(originalcode)
label(success)

define(dex_per_percent,#10)
define(min_accuracy,#20)

// edi = attacker
// esi = target
newmem:
cmp byte ptr [edi+1385],1
je originalcode

push eax
push ecx
push edx
sub esp,10

mov eax, dword ptr [edi+1220]
mov ecx, dword ptr [esi+1220]

cmp eax,ecx
jg success

sub eax,ecx
mov dword ptr [esp],eax
mov dword ptr [esp+4],dex_per_percent
fild dword ptr [esp+4] // dex_per_percent
fild dword ptr [esp] // DEX difference
fabs
fdiv st(0), st(1)
fistp dword ptr [esp]
fistp dword ptr [esp+4]

mov esi,#100
sub esi, dword ptr [esp]

cmp esi,min_accuracy
jge pop_originalcode

mov esi,min_accuracy

pop_originalcode:
add esp,10
pop edx
pop ecx
pop eax

originalcode:
cmp esi,1
jmp returnhere

success:
mov esi,#100
jmp pop_originalcode

00463D4B:
jmp newmem
returnhere:

[DISABLE]

00463D4B:
mov esi,eax
cmp esi,1

dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>478</ID>
      <Description>"DEX Override (Ranged)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(pop_originalcode)
label(originalcode)
label(success)

define(dex_per_percent,#10)
define(min_accuracy,#20)

// edi = attacker
// esi = target
newmem:
cmp byte ptr [edi+1395],1
je originalcode

push eax
push ecx
push edx
sub esp,10

mov eax, dword ptr [edi+1220]
mov ecx, dword ptr [esi+1220]

cmp eax,ecx
jg success

sub eax,ecx
mov dword ptr [esp],eax
mov dword ptr [esp+4],dex_per_percent
fild dword ptr [esp+4] // dex_per_percent
fild dword ptr [esp] // DEX difference
fabs
fdiv st(0), st(1)
fistp dword ptr [esp]
fistp dword ptr [esp+4]

mov esi,#100
sub esi, dword ptr [esp]

cmp esi,min_accuracy
jge pop_originalcode

mov esi,min_accuracy

pop_originalcode:
add esp,10
pop edx
pop ecx
pop eax

originalcode:
cmp esi,1
jmp returnhere

success:
mov esi,#100
jmp pop_originalcode

00463C9D:
jmp newmem
returnhere:

[DISABLE]

00463C9D:
mov esi,eax
cmp esi,1

dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>476</ID>
      <Description>"rune_cutting"</Description>
      <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>472</ID>
          <Description>"bootleggery"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//by Bowie
[ENABLE]
alloc(newmem,32)
label(return)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
//original code
cmp dword ptr [eax+000001A4],00
jmp return

00473ED7:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473ED7:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"arena recall"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//by Bowie
[ENABLE]
alloc(newmem,32)
label(return)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
//original code
cmp dword ptr [eax+000001A4],00
jmp return

00473FFD:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473FFD:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>473</ID>
          <Description>"capital recall"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//by Bowie
[ENABLE]
alloc(newmem,32)
label(return)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
//original code
cmp dword ptr [eax+000001A4],00
jmp return

00473DB0:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473DB0:
cmp dword ptr [eax+000001A4],00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>474</ID>
          <Description>"guild house"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//by Bowie
[ENABLE]
alloc(newmem,32)
label(return)

newmem:
cmp dword ptr [ebp+00001270],02
je 004742B6
//original code
cmp dword ptr [eax+000001A4],06
jmp return

00474196:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00474196:
cmp dword ptr [eax+000001A4],06
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>475</ID>
          <Description>"party summon"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//by [DEV]AkaneTendo
[ENABLE]
alloc(newmem,32)
label(return)

newmem:
cmp dword ptr [ebp+00001270],02
je 0047468A
//original code
cmp dword ptr [ebp+000058B8],00
jmp return

00473400:
jmp newmem
nop
nop
return:

[DISABLE]
dealloc(newmem)
00473400:
cmp dword ptr [ebp+000058B8],00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Perfect Recreation Rune Max"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
// [Dev]Beno - 2020
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [ebp+00],dx
mov eax,#60 //change this to you stats
//movzx eax,bl original code
// the script will make 2500 HP and all Stats 25.
exit:
jmp returnhere

"ps_game.exe"+D2C20:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+D2C20:
mov [ebp+00],dx
movzx eax,bl
//Alt: db 66 89 55 00 0F B6 C3
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Anti cheat v.3 by N19"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Author Dev-19
[ENABLE]
alloc(range,8)
"ps_game.exe"+78337:
fcomp qword ptr [range]
range:
dq (double)5
 
[DISABLE]
dealloc(range)
"ps_game.exe"+78337:
fcomp qword ptr [ps_game.exe+1740D8]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>123</ID>
      <Description>"Member Invitation By N19"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

// enable delay skill after use member invitation rune - alvx9
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(delayskill)

newmem:
pushad
push ebx
mov ebx,dword ptr[ebx+78]
cmp ebx,ebx
pop ebx
popad
jmp delayskill


delayskill:
cmp dword ptr [ebp+00001270],02
jne originalcode
jmp 0047468A

originalcode:
cmp dword ptr [ecx+78],43
je ps_game.exe+7468A
jmp exit

exit:
jmp returnhere

"ps_game.exe"+733E9:
jmp newmem
nop
nop
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+733E9:
cmp dword ptr [ecx+78],43
je ps_game.exe+7468A
//Alt: db 83 79 78 43 0F 84 97 12 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>124</ID>
      <Description>"Movement rune By -N19"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

// send delay skill after use Movment rune - alvx9
alloc(newmem,2048)
label(returnhere)
label(exit)
label(originalcode)
label(delayskill)

newmem:
pushad
push ebx
mov ebx,[ebp+000000DC]
cmp ebx,ebx
pop ebx
popad
jmp delayskill


delayskill:
cmp dword ptr [ebp+00001270],02
jne originalcode
jmp 0047468A

originalcode:
cmp edi,[ebp+000000DC]
jmp exit


exit:
jmp returnhere

"ps_game.exe"+73488:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ps_game.exe"+73488:
cmp edi,[ebp+000000DC]
//Alt: db 3B BD DC 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>532</ID>
      <Description>"AH Change Rune Location"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Credits to Eric-Dutra16
[ENABLE]

// Light Auction House Spawn Points

// Light
0056E628:
dd #42 // MapID

dd (float)495.06 // X
dd (float)1.240 // Y
dd (float)307.59 // Z

// Fury
0056E638:
dd #42 // MapID

dd (float)495.06 // X
dd (float)1.240 // Y
dd (float)307.59 // Z


[DISABLE]

0056E628:
dd 0000002A

dd 429D3852
dd 4175C28F
dd 41DF999A

0056E638:
dd 0000002A

dd 41BB1EB8
dd 4175C28F
dd 42D4CCCD
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>533</ID>
      <Description>"jump_cutting"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Bowie 06/2020
[ENABLE]
alloc(jump_cutting,32)
label(return)
{stand/sit/jump packet bytes
06 05 01 00 00 00 00 - stand
06 05 01 00 00 00 01 - sit
06 05 01 00 00 00 02 - jump}
jump_cutting:
mov cl,[ebp+02]
cmp cl,02
//stops sending jump packets
je 00479155
//original code
mov [esp+22],edx
jmp return

0047894D:
jmp jump_cutting
nop
nop
return:

[DISABLE]
dealloc(jump_cutting)
0047894D:
mov cl,[ebp+02]
mov [esp+22],edx
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>Change of fadd dword ptr [ps_game._real]</Description>
      <AddressString>ps_game.exe+6A1D7</AddressString>
      <Before>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>18</Byte>
        <Byte>D8</Byte>
        <Byte>09</Byte>
      </Before>
      <Actual>
        <Byte>D8</Byte>
        <Byte>05</Byte>
        <Byte>4C</Byte>
        <Byte>A4</Byte>
        <Byte>53</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>5E</Byte>
        <Byte>24</Byte>
        <Byte>DF</Byte>
        <Byte>E0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne ps_game.exe+78392</Description>
      <AddressString>ps_game.exe+78342</AddressString>
      <Before>
        <Byte>DF</Byte>
        <Byte>E0</Byte>
        <Byte>F6</Byte>
        <Byte>C4</Byte>
        <Byte>41</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>4E</Byte>
      </Actual>
      <After>
        <Byte>DD</Byte>
        <Byte>D8</Byte>
        <Byte>C7</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp 040E0000</Description>
      <AddressString>ps_game.exe+72E10</AddressString>
      <Before>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>2C</Byte>
        <Byte>85</Byte>
        <Byte>DB</Byte>
      </Before>
      <Actual>
        <Byte>E9</Byte>
        <Byte>EB</Byte>
        <Byte>D1</Byte>
        <Byte>C6</Byte>
        <Byte>03</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>80</Byte>
        <Byte>7B</Byte>
        <Byte>42</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jl ps_game.exe+D57CE</Description>
      <AddressString>ps_game.exe+D578D</AddressString>
      <Before>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>7C</Byte>
        <Byte>3F</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>96</Byte>
        <Byte>DC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov al,01</Description>
      <AddressString>ps_game.exe+D57CA</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>66</Byte>
        <Byte>26</Byte>
        <Byte>F5</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>B0</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
        <Byte>04</Byte>
        <Byte>01</Byte>
        <Byte>5F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of inc [esi+000000F8]</Description>
      <AddressString>ps_game.exe+D5780</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>70</Byte>
        <Byte>25</Byte>
        <Byte>F5</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>86</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>BE</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of xor al,al</Description>
      <AddressString>ps_game.exe+D57CE</AddressString>
      <Before>
        <Byte>FF</Byte>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>30</Byte>
        <Byte>C0</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of pop edi</Description>
      <AddressString>ps_game.exe+D57D0</AddressString>
      <Before>
        <Byte>01</Byte>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>5F</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of ret </Description>
      <AddressString>ps_game.exe+D57D1</AddressString>
      <Before>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>C3</Byte>
      </Actual>
      <After>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov eax,00000000</Description>
      <AddressString>ps_game.exe+D57D2</AddressString>
      <Before>
        <Byte>C3</Byte>
        <Byte>32</Byte>
        <Byte>C0</Byte>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>B8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [esi+000000F8],00000001</Description>
      <AddressString>ps_game.exe+D57AD</AddressString>
      <Before>
        <Byte>08</Byte>
        <Byte>D9</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>86</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>05</Byte>
        <Byte>60</Byte>
        <Byte>41</Byte>
        <Byte>57</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of ret </Description>
      <AddressString>ps_game.exe+D57DC</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C3</Byte>
      </Actual>
      <After>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov eax,[esi+000000E0]</Description>
      <AddressString>ps_game.exe+D579B</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>5C</Byte>
        <Byte>41</Byte>
        <Byte>57</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>6A</Byte>
        <Byte>07</Byte>
        <Byte>6A</Byte>
        <Byte>00</Byte>
        <Byte>52</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movzx ebx,byte ptr [ebp+0000144D]</Description>
      <AddressString>003E0104</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>5F</Byte>
        <Byte>5A</Byte>
        <Byte>58</Byte>
        <Byte>53</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>9D</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>05</Byte>
        <Byte>93</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of or byte ptr [edi+0000144D],-80</Description>
      <AddressString>ps_game.exe+787D6</AddressString>
      <Before>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>7F</Byte>
      </Before>
      <Actual>
        <Byte>80</Byte>
        <Byte>8F</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>80</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>45</Byte>
        <Byte>05</Byte>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov byte ptr [esp+22],03</Description>
      <AddressString>ps_game.exe+7890F</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>1C</Byte>
        <Byte>50</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>C6</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>22</Byte>
        <Byte>03</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>C7</Byte>
        <Byte>47</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of add [esi+00000098],eax</Description>
      <AddressString>ps_game.exe+EA9DA</AddressString>
      <Before>
        <Byte>41</Byte>
        <Byte>38</Byte>
        <Byte>11</Byte>
        <Byte>51</Byte>
        <Byte>3C</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>86</Byte>
        <Byte>98</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>11</Byte>
        <Byte>96</Byte>
        <Byte>9C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of cmp edi,[ebp+000000DC]</Description>
      <AddressString>ps_game.exe+73488</AddressString>
      <Before>
        <Byte>84</Byte>
        <Byte>02</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>3B</Byte>
        <Byte>BD</Byte>
        <Byte>DC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>F6</Byte>
        <Byte>11</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [edi+0000144D],dl</Description>
      <AddressString>ps_game.exe+7878B</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8A</Byte>
        <Byte>55</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>88</Byte>
        <Byte>97</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>45</Byte>
        <Byte>02</Byte>
        <Byte>C1</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov dl,[ebp+02]</Description>
      <AddressString>ps_game.exe+78788</AddressString>
      <Before>
        <Byte>87</Byte>
        <Byte>6C</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>55</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>97</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of and byte ptr [edi+0000144D],7F</Description>
      <AddressString>ps_game.exe+787CF</AddressString>
      <Before>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>0E</Byte>
      </Before>
      <Actual>
        <Byte>80</Byte>
        <Byte>A7</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>7F</Byte>
      </Actual>
      <After>
        <Byte>80</Byte>
        <Byte>8F</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of call dword ptr [ps_game.exe+1540D0]</Description>
      <AddressString>ps_game.exe+7877C</AddressString>
      <Before>
        <Byte>8F</Byte>
        <Byte>62</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>D0</Byte>
        <Byte>40</Byte>
        <Byte>55</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>6C</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je ps_game.exe+9DD11</Description>
      <AddressString>ps_game.exe+9DD0A</AddressString>
      <Before>
        <Byte>88</Byte>
        <Byte>B8</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>05</Byte>
      </Actual>
      <After>
        <Byte>32</Byte>
        <Byte>C0</Byte>
        <Byte>C2</Byte>
        <Byte>10</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne ps_game.exe+9DD11</Description>
      <AddressString>ps_game.exe+9DD02</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>0D</Byte>
      </Actual>
      <After>
        <Byte>39</Byte>
        <Byte>88</Byte>
        <Byte>B8</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+79155</Description>
      <AddressString>ps_game.exe+7914A</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>B6</Byte>
        <Byte>4B</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>09</Byte>
      </Actual>
      <After>
        <Byte>6A</Byte>
        <Byte>00</Byte>
        <Byte>6A</Byte>
        <Byte>09</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je ps_game.exe+790B6</Description>
      <AddressString>ps_game.exe+790AA</AddressString>
      <Before>
        <Byte>7C</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>0A</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>CF</Byte>
        <Byte>9A</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne ps_game.exe+79155</Description>
      <AddressString>ps_game.exe+79117</AddressString>
      <Before>
        <Byte>7C</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>3C</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>D8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne ps_game.exe+79155</Description>
      <AddressString>ps_game.exe+79103</AddressString>
      <Before>
        <Byte>58</Byte>
        <Byte>13</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>50</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>D0</Byte>
        <Byte>40</Byte>
        <Byte>55</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je ps_game.exe+79155</Description>
      <AddressString>ps_game.exe+790FA</AddressString>
      <Before>
        <Byte>44</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>59</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>BF</Byte>
        <Byte>58</Byte>
        <Byte>13</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of fld dword ptr [edi+000000D8]</Description>
      <AddressString>ps_game.exe+79119</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>75</Byte>
        <Byte>3C</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>D8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B7</Byte>
        <Byte>97</Byte>
        <Byte>60</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov edx,[eax+000000DC]</Description>
      <AddressString>ps_game.exe+D56E4</AddressString>
      <Before>
        <Byte>57</Byte>
        <Byte>00</Byte>
        <Byte>6A</Byte>
        <Byte>05</Byte>
        <Byte>52</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>90</Byte>
        <Byte>DC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>52</Byte>
        <Byte>8B</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov ecx,[eax+000000E0]</Description>
      <AddressString>ps_game.exe+D56D1</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>51</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>88</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C9</Byte>
        <Byte>74</Byte>
        <Byte>2A</Byte>
        <Byte>D9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jl ps_game.exe+9AEBA</Description>
      <AddressString>ps_game.exe+9AE64</AddressString>
      <Before>
        <Byte>0C</Byte>
        <Byte>C3</Byte>
        <Byte>83</Byte>
        <Byte>F9</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>7C</Byte>
        <Byte>54</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>88</Byte>
        <Byte>08</Byte>
        <Byte>59</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [eax+000058B8],edx</Description>
      <AddressString>ps_game.exe+9AE57</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>3B</Byte>
        <Byte>CA</Byte>
        <Byte>75</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>90</Byte>
        <Byte>B8</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>0C</Byte>
        <Byte>C3</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of add eax,000000D0</Description>
      <AddressString>ps_game.exe+D56F3</AddressString>
      <Before>
        <Byte>14</Byte>
        <Byte>51</Byte>
        <Byte>D9</Byte>
        <Byte>1C</Byte>
        <Byte>24</Byte>
      </Before>
      <Actual>
        <Byte>05</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>50</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je ps_game.exe+9AEBA</Description>
      <AddressString>ps_game.exe+9AE4B</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>B8</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>6D</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>88</Byte>
        <Byte>B4</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+27F00</Description>
      <AddressString>ps_game.exe+27EF7</AddressString>
      <Before>
        <Byte>2B</Byte>
        <Byte>6C</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
        <Byte>45</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>A4</Byte>
        <Byte>24</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov ecx,[eax+000058B4]</Description>
      <AddressString>ps_game.exe+9AE4D</AddressString>
      <Before>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>75</Byte>
        <Byte>6D</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>88</Byte>
        <Byte>B4</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>CA</Byte>
        <Byte>75</Byte>
        <Byte>0A</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of cmp ecx,edx</Description>
      <AddressString>ps_game.exe+9AE53</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>3B</Byte>
        <Byte>CA</Byte>
      </Actual>
      <After>
        <Byte>75</Byte>
        <Byte>0A</Byte>
        <Byte>89</Byte>
        <Byte>90</Byte>
        <Byte>B8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of add esp,0C</Description>
      <AddressString>ps_game.exe+9AE5D</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>83</Byte>
        <Byte>F9</Byte>
        <Byte>02</Byte>
        <Byte>7C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of ret </Description>
      <AddressString>ps_game.exe+9AE60</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>C3</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>F9</Byte>
        <Byte>02</Byte>
        <Byte>7C</Byte>
        <Byte>54</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+9AE61</Description>
      <AddressString>ps_game.exe+9AE55</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>0A</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of cmp ecx,02</Description>
      <AddressString>ps_game.exe+9AE61</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>F9</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>7C</Byte>
        <Byte>54</Byte>
        <Byte>8B</Byte>
        <Byte>88</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of push ecx</Description>
      <AddressString>ps_game.exe+9AEB4</AddressString>
      <Before>
        <Byte>8D</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>10</Byte>
        <Byte>52</Byte>
      </Before>
      <Actual>
        <Byte>51</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>96</Byte>
        <Byte>C6</Byte>
        <Byte>F8</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of push edx</Description>
      <AddressString>ps_game.exe+9AEB3</AddressString>
      <Before>
        <Byte>07</Byte>
        <Byte>8D</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>52</Byte>
      </Actual>
      <After>
        <Byte>51</Byte>
        <Byte>E8</Byte>
        <Byte>96</Byte>
        <Byte>C6</Byte>
        <Byte>F8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of push ecx</Description>
      <AddressString>ps_game.exe+9AEA8</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>68</Byte>
        <Byte>41</Byte>
        <Byte>57</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>51</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>1C</Byte>
        <Byte>24</Byte>
        <Byte>50</Byte>
        <Byte>6A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of fld dword ptr [ps_game.exe+174168]</Description>
      <AddressString>ps_game.exe+9AEA2</AddressString>
      <Before>
        <Byte>0A</Byte>
        <Byte>3B</Byte>
        <Byte>CA</Byte>
        <Byte>75</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>05</Byte>
        <Byte>68</Byte>
        <Byte>41</Byte>
        <Byte>57</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>51</Byte>
        <Byte>D9</Byte>
        <Byte>1C</Byte>
        <Byte>24</Byte>
        <Byte>50</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of add eax,000000D0</Description>
      <AddressString>ps_game.exe+9AE8E</AddressString>
      <Before>
        <Byte>88</Byte>
        <Byte>DC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>05</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>06</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [eax+ecx*4+000014A4],edx</Description>
      <AddressString>ps_game.exe+9AE77</AddressString>
      <Before>
        <Byte>83</Byte>
        <Byte>F9</Byte>
        <Byte>0A</Byte>
        <Byte>77</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>94</Byte>
        <Byte>88</Byte>
        <Byte>A4</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>B9</Byte>
        <Byte>22</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [eax+000058B8],edx</Description>
      <AddressString>ps_game.exe+9AE6C</AddressString>
      <Before>
        <Byte>88</Byte>
        <Byte>08</Byte>
        <Byte>59</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>90</Byte>
        <Byte>B8</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>F9</Byte>
        <Byte>0A</Byte>
        <Byte>77</Byte>
        <Byte>07</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov ecx,[eax+000000DC]</Description>
      <AddressString>ps_game.exe+9AE88</AddressString>
      <Before>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>88</Byte>
        <Byte>DC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>05</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov ecx,00000222</Description>
      <AddressString>ps_game.exe+9AE7E</AddressString>
      <Before>
        <Byte>88</Byte>
        <Byte>A4</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>B9</Byte>
        <Byte>22</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of ja ps_game.exe+9AE7E</Description>
      <AddressString>ps_game.exe+9AE75</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>83</Byte>
        <Byte>F9</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>77</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>94</Byte>
        <Byte>88</Byte>
        <Byte>A4</Byte>
        <Byte>14</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne ps_game.exe+67FC0</Description>
      <AddressString>ps_game.exe+67FC8</AddressString>
      <Before>
        <Byte>0C</Byte>
        <Byte>02</Byte>
        <Byte>40</Byte>
        <Byte>84</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>F6</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>87</Byte>
        <Byte>84</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne ps_game.exe+67FD5</Description>
      <AddressString>ps_game.exe+67FDD</AddressString>
      <Before>
        <Byte>0C</Byte>
        <Byte>02</Byte>
        <Byte>40</Byte>
        <Byte>84</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>F6</Byte>
      </Actual>
      <After>
        <Byte>59</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov cx,[edi+00000160]</Description>
      <AddressString>ps_game.exe+67F87</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>41</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
        <Byte>60</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>4E</Byte>
        <Byte>45</Byte>
        <Byte>D9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [esi+45],cx</Description>
      <AddressString>ps_game.exe+67F8E</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>4E</Byte>
        <Byte>45</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jna ps_game.exe+9B381</Description>
      <AddressString>ps_game.exe+9B358</AddressString>
      <Before>
        <Byte>86</Byte>
        <Byte>F8</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>76</Byte>
        <Byte>27</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7D</Byte>
        <Byte>04</Byte>
        <Byte>33</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+9B36C</Description>
      <AddressString>ps_game.exe+9B360</AddressString>
      <Before>
        <Byte>C0</Byte>
        <Byte>7D</Byte>
        <Byte>04</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>0A</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>F8</Byte>
        <Byte>05</Byte>
        <Byte>7C</Byte>
        <Byte>05</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+7469F</Description>
      <AddressString>ps_game.exe+72E68</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>78</Byte>
        <Byte>FA</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>E9</Byte>
        <Byte>32</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>D0</Byte>
        <Byte>40</Byte>
        <Byte>55</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of cmp al,64</Description>
      <AddressString>ps_game.exe+72928</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8A</Byte>
        <Byte>43</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>3C</Byte>
        <Byte>64</Byte>
      </Actual>
      <After>
        <Byte>72</Byte>
        <Byte>04</Byte>
        <Byte>3C</Byte>
        <Byte>67</Byte>
        <Byte>76</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of call ps_game.exe+728E0</Description>
      <AddressString>ps_game.exe+72E63</AddressString>
      <Before>
        <Byte>95</Byte>
        <Byte>74</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>78</Byte>
        <Byte>FA</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>32</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+7469F</Description>
      <AddressString>ps_game.exe+72E87</AddressString>
      <Before>
        <Byte>85</Byte>
        <Byte>74</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E9</Byte>
        <Byte>13</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>8B</Byte>
        <Byte>51</Byte>
        <Byte>2E</Byte>
        <Byte>66</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [ebp+00005870],eax</Description>
      <AddressString>ps_game.exe+72E50</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>E0</Byte>
        <Byte>93</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>85</Byte>
        <Byte>70</Byte>
        <Byte>58</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8A</Byte>
        <Byte>53</Byte>
        <Byte>41</Byte>
        <Byte>57</Byte>
        <Byte>56</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of add eax,000493E0</Description>
      <AddressString>ps_game.exe+72E4B</AddressString>
      <Before>
        <Byte>40</Byte>
        <Byte>55</Byte>
        <Byte>00</Byte>
        <Byte>6A</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>05</Byte>
        <Byte>E0</Byte>
        <Byte>93</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of push 00</Description>
      <AddressString>ps_game.exe+72E49</AddressString>
      <Before>
        <Byte>15</Byte>
        <Byte>D0</Byte>
        <Byte>40</Byte>
        <Byte>55</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>6A</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of call dword ptr [ps_game.exe+1540D0]</Description>
      <AddressString>ps_game.exe+72E43</AddressString>
      <Before>
        <Byte>85</Byte>
        <Byte>55</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>D0</Byte>
        <Byte>40</Byte>
        <Byte>55</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+7384E</Description>
      <AddressString>ps_game.exe+7406D</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E9</Byte>
        <Byte>DC</Byte>
        <Byte>F7</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>95</Byte>
        <Byte>2D</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of call ps_game.exe+72880</Description>
      <AddressString>ps_game.exe+73E98</AddressString>
      <Before>
        <Byte>E6</Byte>
        <Byte>56</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>C7</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>E3</Byte>
        <Byte>E9</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>E5</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+79155</Description>
      <AddressString>ps_game.exe+78F88</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>58</Byte>
        <Byte>41</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E9</Byte>
        <Byte>C8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>BF</Byte>
        <Byte>44</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of cmp dword ptr [edi+00001444],01</Description>
      <AddressString>ps_game.exe+78F8D</AddressString>
      <Before>
        <Byte>E9</Byte>
        <Byte>C8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>BF</Byte>
        <Byte>44</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>BB</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of cmp [edi+00001270],esi</Description>
      <AddressString>ps_game.exe+78CAD</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>93</Byte>
        <Byte>88</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>39</Byte>
        <Byte>B7</Byte>
        <Byte>70</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7D</Byte>
        <Byte>06</Byte>
        <Byte>89</Byte>
        <Byte>B7</Byte>
        <Byte>70</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jnl ps_game.exe+78CBB</Description>
      <AddressString>ps_game.exe+78CB3</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>7D</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>B7</Byte>
        <Byte>70</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [edi+00001270],esi</Description>
      <AddressString>ps_game.exe+78CB5</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>B7</Byte>
        <Byte>70</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>B7</Byte>
        <Byte>44</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of call dword ptr [ps_game.exe+1540D0]</Description>
      <AddressString>ps_game.exe+9AF1C</AddressString>
      <Before>
        <Byte>86</Byte>
        <Byte>58</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>D0</Byte>
        <Byte>40</Byte>
        <Byte>55</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>68</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of call ps_game.exe+9AE40</Description>
      <AddressString>ps_game.exe+78BA8</AddressString>
      <Before>
        <Byte>9F</Byte>
        <Byte>58</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>93</Byte>
        <Byte>22</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>A3</Byte>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jmp ps_game.exe+79155</Description>
      <AddressString>ps_game.exe+78BAD</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>E9</Byte>
        <Byte>A3</Byte>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8A</Byte>
        <Byte>4D</Byte>
        <Byte>02</Byte>
        <Byte>80</Byte>
        <Byte>F9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je ps_game.exe+78BC9</Description>
      <AddressString>ps_game.exe+78BDD</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>83</Byte>
        <Byte>F8</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>EA</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>BF</Byte>
        <Byte>58</Byte>
        <Byte>13</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of ja ps_game.exe+9DC71</Description>
      <AddressString>ps_game.exe+9DB53</AddressString>
      <Before>
        <Byte>B7</Byte>
        <Byte>80</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>87</Byte>
        <Byte>18</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>87</Byte>
        <Byte>F4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne ps_game.exe+7714F</Description>
      <AddressString>ps_game.exe+77145</AddressString>
      <Before>
        <Byte>30</Byte>
        <Byte>80</Byte>
        <Byte>79</Byte>
        <Byte>30</Byte>
        <Byte>03</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>81</Byte>
        <Byte>C6</Byte>
        <Byte>B8</Byte>
        <Byte>0B</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of add esi,00001388</Description>
      <AddressString>ps_game.exe+7714F</AddressString>
      <Before>
        <Byte>0B</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>EB</Byte>
        <Byte>06</Byte>
      </Before>
      <Actual>
        <Byte>81</Byte>
        <Byte>C6</Byte>
        <Byte>88</Byte>
        <Byte>13</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>85</Byte>
        <Byte>DC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of add esi,00000BB8</Description>
      <AddressString>ps_game.exe+77147</AddressString>
      <Before>
        <Byte>79</Byte>
        <Byte>30</Byte>
        <Byte>03</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>81</Byte>
        <Byte>C6</Byte>
        <Byte>B8</Byte>
        <Byte>0B</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>06</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je ps_game.exe+78976</Description>
      <AddressString>ps_game.exe+7895A</AddressString>
      <Before>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>26</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>1A</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
        <Byte>52</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of call ps_game.exe+D5250</Description>
      <AddressString>ps_game.exe+7896C</AddressString>
      <Before>
        <Byte>BA</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>DF</Byte>
        <Byte>C8</Byte>
        <Byte>05</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>DF</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov cl,[ebp+02]</Description>
      <AddressString>ps_game.exe+7894D</AddressString>
      <Before>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>4D</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>22</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
